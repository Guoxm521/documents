(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{302:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、对数据库的常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、对数据库的常用操作"}},[t._v("#")]),t._v(" 一、对数据库的常用操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("功能")]),t._v(" "),s("th",[s("strong",[t._v("SQL")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("查看所有的数据库")]),t._v(" "),s("td",[t._v("show databases；")])]),t._v(" "),s("tr",[s("td",[t._v("创建数据库")]),t._v(" "),s("td",[t._v("CREATE DATABASE IF NOT EXISTS demo2 DEFAULT CHARACTER SET utf8;")])]),t._v(" "),s("tr",[s("td",[t._v("切换 (选择要操作的) 数据库")]),t._v(" "),s("td",[t._v("use mydb1；")])]),t._v(" "),s("tr",[s("td",[t._v("删除数据库")]),t._v(" "),s("td",[t._v("drop database [if exists] mydb1；")])]),t._v(" "),s("tr",[s("td",[t._v("修改数据库编码")]),t._v(" "),s("td",[t._v("alter database mydb1 character set utf8;")])])])]),t._v(" "),s("h2",{attrs:{id:"二、对表操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、对表操作"}},[t._v("#")]),t._v(" 二、对表操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("功能")]),t._v(" "),s("th",[s("strong",[t._v("SQL")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("查看当前数据库的所有表名称")]),t._v(" "),s("td",[t._v("show tables;")])]),t._v(" "),s("tr",[s("td",[t._v("查看指定某个表的创建语句")]),t._v(" "),s("td",[t._v("show create table 表名；")])]),t._v(" "),s("tr",[s("td",[t._v("查看表结构")]),t._v(" "),s("td",[t._v("desc 表名")])]),t._v(" "),s("tr",[s("td",[t._v("删除表")]),t._v(" "),s("td",[t._v("drop table 表名")])]),t._v(" "),s("tr",[s("td",[t._v("修改表添加列")]),t._v(" "),s("td",[t._v("alter table 表名 add 列名 类型(长度) [约束];")])]),t._v(" "),s("tr",[s("td",[t._v("修改列名添加类型")]),t._v(" "),s("td",[t._v("alter table 表名 change 旧列名 新列名 类型(长度) 约束;")])]),t._v(" "),s("tr",[s("td",[t._v("修改表删除列")]),t._v(" "),s("td",[t._v("alter table 表名 drop 列名;")])]),t._v(" "),s("tr",[s("td",[t._v("修改表名")]),t._v(" "),s("td",[t._v("rename table 表名 to 新表名;")])])])]),t._v(" "),s("h2",{attrs:{id:"三、约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、约束"}},[t._v("#")]),t._v(" 三、约束")]),t._v(" "),s("h4",{attrs:{id:"主键约束-primary-key-pk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主键约束-primary-key-pk"}},[t._v("#")]),t._v(" 主键约束(primary key) PK")]),t._v(" "),s("p",[t._v("MySQL主键约束是一个列或者多个列的组合，其值能唯一地标识表中的每一行,方便在RDBMS中尽快的找到某一行。\n主键约束相当于 唯一约束 + 非空约束 的组合，主键约束列不允许重复，也不允许出现空值。\n每个表最多只允许一个主键\n主键约束的关键字是：primary key\n当创建主键的约束时，系统默认会在所在的列和列组合上建立对应的唯一索引。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 主键")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHARACTER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsource "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FLOAT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 联合主键")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHARACTER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsource "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FLOAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除主键")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"自增长约束-auto-increment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自增长约束-auto-increment"}},[t._v("#")]),t._v(" 自增长约束(auto_increment)")]),t._v(" "),s("p",[t._v("默认情况下，auto_increment的初始值是 1，每新增一条记录，字段值自动加 1。\n一个表中只能有一个字段使用 auto_increment约束，且该字段必须有唯一索引，以避免序号重复（即为主键或主键的一部分）。\nauto_increment约束的字段必须具备 NOT NULL 属性。\nauto_increment约束的字段只能是整数类型（TINYINT、SMALLINT、INT、BIGINT 等。\nauto_increment约束字段的最大值受该字段的数据类型约束，如果达到上限，auto_increment就会失效。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 自增长约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHARACTER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" stu3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" stu3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李四'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 修改表格的自增长初始值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("    数据之后自动增长从断点开始\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),t._v("    数据之后自动增长从默认起始值开始\n")])])]),s("h4",{attrs:{id:"非空约束-not-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非空约束-not-null"}},[t._v("#")]),t._v(" 非空约束(not null)")]),t._v(" "),s("p",[t._v("非空约束（not null）指字段的值不能为空。对于使用了非空约束的字段，如果用户在添加数据时没有指定值，数据库系统就会报错。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 非空约束  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHARACTER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsouce "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FLOAT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" stu4 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  Column 'name' cannot be null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 指定非空约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user7 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除非空约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user7 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("h4",{attrs:{id:"唯一性约束-unique"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#唯一性约束-unique"}},[t._v("#")]),t._v(" 唯一性约束(unique)")]),t._v(" "),s("p",[t._v("唯一约束（Unique Key）是指所有记录中字段的值不能重复出现。例如，为 id 字段加上唯一性约束后，每条记录的 id 值都是唯一的，不能出现重复的情况。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 唯一约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n phone_number "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 指定唯一约束 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 添加唯一约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user9 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" unique_ph "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phone_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除唯一约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user9 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" unique_ph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"默认约束-default"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认约束-default"}},[t._v("#")]),t._v(" 默认约束(default)")]),t._v(" "),s("p",[t._v("MySQL 默认值约束用来指定某列的默认值。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user10 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n  id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  address "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" ‘北京’ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 指定默认约束 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 添加唯一约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user11 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("  ‘北京’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除唯一约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t_user11 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" address "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("h4",{attrs:{id:"零填充约束-zerofill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#零填充约束-zerofill"}},[t._v("#")]),t._v(" 零填充约束(zerofill)")]),t._v(" "),s("p",[t._v("插入数据时，当该字段的值的长度小于定义的长度时，会在该值的前面补上相应的0\v2、zerofill默认为int(10)\v3、当使用zerofill 时，默认会自动加unsigned（无符号）属性，使用unsigned属性后，数值范围是原值的2倍，例如，有符号为-128~+127，无符号为0~256。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 零填充约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n  id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" ZEROFILL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 零填充约束")]),t._v("\n  name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" stu6 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除零填充约束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu6 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"四、基本查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、基本查询"}},[t._v("#")]),t._v(" 四、基本查询")]),t._v(" "),s("h4",{attrs:{id:"简单查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单查询"}},[t._v("#")]),t._v(" 简单查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查全表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" pname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\tc  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" pname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'三只松鼠'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 表别名: ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 列别名：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" pname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" pn "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 去重查询  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"运算符操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符操作"}},[t._v("#")]),t._v(" 运算符操作")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("算数运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("算术运算符")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("+")])]),t._v(" "),s("td",[t._v("加法运算")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("-")])]),t._v(" "),s("td",[t._v("减法运算")])]),t._v(" "),s("tr",[s("td",[t._v("*****")]),t._v(" "),s("td",[t._v("乘法运算")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("/")]),t._v(" "),s("strong",[t._v("或")]),t._v(" "),s("strong",[t._v("DIV")])]),t._v(" "),s("td",[t._v("除法运算，返回商")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("%")]),t._v(" "),s("strong",[t._v("或")]),t._v(" "),s("strong",[t._v("MOD")])]),t._v(" "),s("td",[t._v("求余运算，返回余数")])])])])]),t._v(" "),s("li",[s("p",[t._v("比较运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("比较运算符")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("=")])]),t._v(" "),s("td",[t._v("等于")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("<")]),t._v(" "),s("strong",[t._v("和")]),t._v(" "),s("strong",[t._v("<=")])]),t._v(" "),s("td",[t._v("小于和小于等于")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v(">")]),t._v(" "),s("strong",[t._v("和")]),t._v(" "),s("strong",[t._v(">=")])]),t._v(" "),s("td",[t._v("大于和大于等于")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("<=>")])]),t._v(" "),s("td",[t._v("安全的等于，两个操作码均为NULL时，其所得值为1；而当一个操作码为NULL时，其所得值为0")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("<>")]),t._v(" **或   **!=")]),t._v(" "),s("td",[t._v("不等于")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("IS NULL")]),t._v(" "),s("strong",[t._v("或")]),t._v(" "),s("strong",[t._v("ISNULL")])]),t._v(" "),s("td",[t._v("判断一个值是否为 NULL")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("IS NOT NULL")])]),t._v(" "),s("td",[t._v("判断一个值是否不为 NULL")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("LEAST")])]),t._v(" "),s("td",[t._v("当有两个或多个参数时，返回最小值")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("GREATEST")])]),t._v(" "),s("td",[t._v("当有两个或多个参数时，返回最大值")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("BETWEEN AND")])]),t._v(" "),s("td",[t._v("判断一个值是否落在两个值之间")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("IN")])]),t._v(" "),s("td",[t._v("判断一个值是IN列表中的任意一个值")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("NOT IN")])]),t._v(" "),s("td",[t._v("判断一个值不是IN列表中的任意一个值")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("LIKE")])]),t._v(" "),s("td",[t._v("通配符匹配")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("REGEXP")])]),t._v(" "),s("td",[t._v("正则表达式匹配")])])])])]),t._v(" "),s("li",[s("p",[t._v("逻辑运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("逻辑运算符")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("NOT")]),t._v(" "),s("strong",[t._v("或者")]),t._v(" "),s("strong",[t._v("!")])]),t._v(" "),s("td",[t._v("逻辑非")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("AND")]),t._v(" "),s("strong",[t._v("或者")]),t._v(" "),s("strong",[t._v("&&")])]),t._v(" "),s("td",[t._v("逻辑与")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("OR")]),t._v(" "),s("strong",[t._v("或者")]),t._v(" "),s("strong",[t._v("||")])]),t._v(" "),s("td",[t._v("逻辑或")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("XOR")])]),t._v(" "),s("td",[t._v("逻辑异或")])])])])]),t._v(" "),s("li",[s("p",[t._v("位运算符")]),t._v(" "),s("p",[t._v("位运算符是在二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("位运算符")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("|")])]),t._v(" "),s("td",[t._v("按位或")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("&")])]),t._v(" "),s("td",[t._v("按位与")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("^")])]),t._v(" "),s("td",[t._v("按位异或")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("<<")])]),t._v(" "),s("td",[t._v("按位左移")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v(">>")])]),t._v(" "),s("td",[t._v("按位右移")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("~")])]),t._v(" "),s("td",[t._v("按位取反，反转所有比特")])])])])])]),t._v(" "),s("h4",{attrs:{id:"排序查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序查询"}},[t._v("#")]),t._v(" 排序查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" \n 字段名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，……\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 字段名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("，字段名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("……\n")])])]),s("p",[t._v("1."),s("code",[t._v("asc")]),t._v("代表升序，"),s("code",[t._v("desc")]),t._v("代表降序，如果不写默认升序\n2.order by用于子句中可以支持单个字段，多个字段，表达式，函数，别名\n3.order by子句，放在查询语句的最后面。LIMIT子句除外")]),t._v(" "),s("h4",{attrs:{id:"聚合查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合查询"}},[t._v("#")]),t._v(" 聚合查询")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("聚合函数")])]),t._v(" "),s("th",[s("strong",[t._v("作用")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("count()")])]),t._v(" "),s("td",[t._v("统计指定列不为NULL的记录行数；")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("sum()")])]),t._v(" "),s("td",[t._v("计算指定列的数值和，如果指定列类型不是数值类型，那么计算结果为0")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("max()")])]),t._v(" "),s("td",[t._v("计算指定列的最大值，如果指定列是字符串类型，那么使用字符串排序运算；")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("min()")])]),t._v(" "),s("td",[t._v("计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算；")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("avg()")])]),t._v(" "),s("td",[t._v("计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为0")])])])]),t._v(" "),s("h4",{attrs:{id:"分组查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("… "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 分组字段 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" 分组条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" category_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" category_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" category_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" category_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 方式1-显示前n条")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表明 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 方式2-分页显示")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表明 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nm: 整数，表示从第几条索引开始，计算方式 （当前页"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("每页显示条数n: 整数，表示查询多少条数据\n")])])]),s("h4",{attrs:{id:"insert-into-select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-into-select"}},[t._v("#")]),t._v(" INSERT INTO SELECT")]),t._v(" "),s("p",[t._v("将一张表的数据导入到另一张表中，可以使用INSERT INTO SELECT语句")]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" Table2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("field1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("field2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" value1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("… "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Table1 或者："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" Table2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Table1\n")])])]),s("h2",{attrs:{id:"五、多表查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、多表查询"}},[t._v("#")]),t._v(" 五、多表查询")]),t._v(" "),s("h4",{attrs:{id:"创建数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建数据"}},[t._v("#")]),t._v(" 创建数据")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\tdeptno "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建员工表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("  eid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工编号  ")]),t._v("\n                                ename "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工名字  ")]),t._v("\n                                age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工年龄  ")]),t._v("\n                                dept_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 员工所属部门);")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'研发部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1002'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'财务部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1004'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'人事部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'乔峰'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'段誉'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'虚竹'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'阿紫'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1001'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'扫地僧'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1002'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李秋水'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1002'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'鸠摩智'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1002'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'天山童姥'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'慕容博'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("58")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1003'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'丁春秋'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("71")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1005'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"交叉连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交叉连接查询"}},[t._v("#")]),t._v(" 交叉连接查询")]),t._v(" "),s("ol",[s("li",[t._v("交叉连接查询返回被连接的两个表所有数据行的笛卡尔积")]),t._v(" "),s("li",[t._v("笛卡尔积可以理解为一张表的每一行去和另外一张表的任意一行进行匹配")]),t._v(" "),s("li",[t._v("假如A表有m行数据，B表有n行数据，则返回m*n行数据")]),t._v(" "),s("li",[t._v("笛卡尔积会产生很多冗余的数据，后期的其他查询可以在该集合的基础上进行条件筛选")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 交叉查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"内连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内连接查询"}},[t._v("#")]),t._v(" 内连接查询")]),t._v(" "),s("p",[t._v("​\t\t内连接查询 求多张表的交集")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("隐式内连接（SQL92标准）："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 显示内连接（SQL99标准）："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 内连接查询-- 查询每个部门的所属员工 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" deptno  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询研发部和销售部的所有员工")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'研发部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'研发部'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询每个部门的人数 并且升序排序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" deptno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" total_count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" deptno "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" total_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询人数大于等于3的部门，并按人数降序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" deptno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" deptno "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"外连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外连接查询"}},[t._v("#")]),t._v(" 外连接查询")]),t._v(" "),s("blockquote",[s("p",[t._v("外连接分为左外连接（left outer join）、右外连接(right outer join)，满外连接(full outer join)。\n注意：oracle里面有full join,可是在mysql对full join支持的不好。我们可以使用union来达到目的。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gxming.oss-cn-shenzhen.aliyuncs.com/my_study_notesimage-20211226112451882.png",alt:"image-20211226112451882"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("左外连接")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" joinselect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  查询哪些部门有员工  哪些没有员工")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("右外连接")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("满外连接")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("full")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" joinselect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("full")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用union关键字实现左外连接和右外连接的并集")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_idUNIONSELECT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" dept3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("子查询就是指的在一个完整的查询语句之中，嵌套若干个不同功能的小查询，从而一起完成复杂查询的一种编写形式，通俗一点就是包含select嵌套的查询。")])]),t._v(" "),s("li",[s("p",[t._v("子查询可以返回的数据类型一共分为四种：")]),t._v(" "),s("ul",[s("li",[t._v("单行单列：返回的是一个具体列的内容，可以理解为一个单值数据；")]),t._v(" "),s("li",[t._v("单行多列：返回一行数据中多个列的内容；")]),t._v(" "),s("li",[t._v("多行单列：返回多行记录之中同一列的内容，相当于给出了一个操作范围；")]),t._v(" "),s("li",[t._v("多行多列：查询返回的结果是一张临时表")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询年龄最大的员工信息，显示信息包含员工号、员工名字，员工年龄")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" eid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询研发部20岁以下的员工信息,包括员工号、员工名字，部门名字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" eid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'研发部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("子查询关键字")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ALL")]),t._v("    与子查询返回的所有值比较为true 则返回true")]),t._v(" "),s("li",[s("code",[t._v("ANY")]),t._v("    与子查询返回的任何值比较为true 则返回true   任意一个为true即可")]),t._v(" "),s("li",[s("code",[t._v("SOME")]),t._v("  SOME和ANY作用差不多")]),t._v(" "),s("li",[s("code",[t._v("IN")]),t._v("      用于判断某个记录的值，是否在指定的集合中，在IN关键字前边加上not可以将条件反过来")]),t._v(" "),s("li",[s("code",[t._v("EXISTS")]),t._v("    该子查询如果“有数据结果”(至少返回一行数据)， 则该EXISTS() 的结果为“true”，外层查询执行\n该子查询如果“没有数据结果”（没有任何数据返回），则该EXISTS()的结果为“false”，外层查询不执行\nEXISTS后面的子查询不返回任何实际数据，只返回真或假，当返回真时 where条件成立\n注意，EXISTS关键字，比IN关键字的运算效率高，因此，在实际开发中，特别是大数据量时，推荐使用EXISTS关键字")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--查询年龄大于1003部门所有年龄的员工信息SELECT * FROM emp3 WHERE age > ALL(SELECT age FROM emp3 WHERE dept_id = '1003');")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询研发部和销售部的员工信息，包含员工号、员工名字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" eid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ename "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" deptno "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dept3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'研发部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询60岁以上的员工  有则输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp3  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"表自关联"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表自关联"}},[t._v("#")]),t._v(" 表自关联")]),t._v(" "),s("h2",{attrs:{id:"六、视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、视图"}},[t._v("#")]),t._v(" 六、视图")]),t._v(" "),s("h4",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("blockquote",[s("p",[t._v("视图（view）是一个虚拟表，非真实存在，其本质是根据SQL语句获取动态的数据集，并为其命名，用户使用时只需使用视图名称即可获取结果集，并可以将其当作表来使用。")]),t._v(" "),s("p",[t._v("数据库中只存放了视图的定义，而并没有存放视图中的数据。这些数据存放在原来的表中。")]),t._v(" "),s("p",[t._v("使用视图查询数据时，数据库系统会从原来的表中取出对应的数据。因此，视图中的数据是依赖于原来的表中的数据的。一旦表中的数据发生改变，显示在视图中的数据也会发生改变。")])]),t._v(" "),s("p",[s("strong",[t._v("作用：")])]),t._v(" "),s("ol",[s("li",[t._v("简化代码，可以把重复使用的查询封装成视图重复使用，同时可以使复杂的查询易于理解和使用。")]),t._v(" "),s("li",[t._v("安全原因，如果一张表中有很多数据，很多信息不希望让所有人看到，此时可以使用视图视，如：社会保险基金表，可以用视图只显示姓名，地址，而不显示社会保险号和工资数等，可以对不同的用户，设定不同的视图。")])]),t._v(" "),s("h4",{attrs:{id:"视图的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图的创建"}},[t._v("#")]),t._v(" 视图的创建")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("algorithm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" {"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("merge")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("temptable")]),t._v("}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" view_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("column_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" select_statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cascaded")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("check")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n参数说明：\n（"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("algorithm")]),t._v("：可选项，表示视图选择的算法。\n（"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）view_name ：表示要创建的视图名称。\n（"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）column_list：可选项，指定视图中各个属性的名词，默认情况下与"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("语句中的查询的属性相同。\n（"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("）select_statement ：表示一个完整的查询语句，将查询记录导入视图中。\n（"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cascaded")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("check")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：可选项，表示更新视图时要保证在该视图的权限范围之内。\n")])])]),s("h4",{attrs:{id:"修改视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改视图"}},[t._v("#")]),t._v(" 修改视图")]),t._v(" "),s("blockquote",[s("p",[t._v("修改视图是指修改数据库中已存在的表的定义。当基本表的某些字段发生改变时，可以通过修改视图来保持视图和基本表之间一致。MySQL中通过CREATE OR REPLACE VIEW语句和ALTER VIEW语句来修改视图。")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" 视图名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("语句\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 更新视图")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v(" view1_emp \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"更新视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新视图"}},[t._v("#")]),t._v(" 更新视图")]),t._v(" "),s("blockquote",[s("p",[t._v("某些视图是可更新的。也就是说，可以在UPDATE、DELETE或INSERT等语句中使用它们，以更新基表的内容。对于可更新的视图，在视图中的行和基表中的行之间必须具有一对一的关系")])]),t._v(" "),s("ul",[s("li",[t._v("如果视图包含下述结构中的任何一种，那么它就是不可更新的：")]),t._v(" "),s("li",[t._v("聚合函数（SUM(), MIN(), MAX(), COUNT()等）")]),t._v(" "),s("li",[t._v("DISTINCT")]),t._v(" "),s("li",[t._v("GROUP BY")]),t._v(" "),s("li",[t._v("HAVING")]),t._v(" "),s("li",[t._v("UNION或UNION ALL")]),t._v(" "),s("li",[t._v("位于选择列表中的子查询\n"),s("ul",[s("li",[t._v("JOIN")]),t._v(" "),s("li",[t._v("FROM子句中的不可更新视图")]),t._v(" "),s("li",[t._v("WHERE子句中的子查询，引用FROM子句中的表。")]),t._v(" "),s("li",[t._v("仅引用文字值（在该情况下，没有要更新的基本表）")])])])]),t._v(" "),s("h4",{attrs:{id:"其他操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他操作"}},[t._v("#")]),t._v(" 其他操作")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重命名视图")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- rename table 视图名 to 新视图名; ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" view1_emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" my_view1\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除视图")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- drop view 视图名[,视图名…];")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v(" view_student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除视图时，只能删除视图的定义，不会删除数据。")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"导入vsv格式数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入vsv格式数据"}},[t._v("#")]),t._v(" 导入vsv格式数据")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" gxm_poetry_tang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" gxm_poetry_tang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" local_infile"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("load")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("infile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'E:/tang.csv'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" gxm_poetry_tang  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fields")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("optionally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enclosed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"'")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lines")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\r\\n'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dynasty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" VARIABLES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"secure_file_priv"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" gxm_poetry_tang "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" author "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李白'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'静夜思'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"七、函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、函数"}},[t._v("#")]),t._v(" 七、函数")]),t._v(" "),s("h4",{attrs:{id:"数学函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[t._v("#")]),t._v(" 数学函数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("函数名")])]),t._v(" "),s("th",[s("strong",[t._v("描述")])]),t._v(" "),s("th",[s("strong",[t._v("实例")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("ABS(x)")])]),t._v(" "),s("td",[t._v("返回 x 的绝对值")]),t._v(" "),s("td",[t._v("返回 -1 的绝对值：SELECT ABS(-1) -- 返回1")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("CEIL(x)")])]),t._v(" "),s("td",[t._v("返回大于或等于 x 的最小整数")]),t._v(" "),s("td",[t._v("SELECT CEIL(1.5) -- 返回2")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("FLOOR(x)")])]),t._v(" "),s("td",[t._v("返回小于或等于 x 的最大整数")]),t._v(" "),s("td",[t._v("小于或等于 1.5 的整数：SELECT FLOOR(1.5) -- 返回1")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("GREATEST(expr1, expr2, expr3, ...)")])]),t._v(" "),s("td",[t._v("返回列表中的最大值")]),t._v(" "),s("td",[t._v('返回以下数字列表中的最大值：SELECT GREATEST(3, 12, 34, 8, 25); -- 34返回以下字符串列表中的最大值：SELECT GREATEST("Google", "Runoob", "Apple");  -- Runoob')])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("LEAST(expr1, expr2, expr3, ...)")])]),t._v(" "),s("td",[t._v("返回列表中的最小值")]),t._v(" "),s("td",[t._v('返回以下数字列表中的最小值：SELECT LEAST(3, 12, 34, 8, 25); -- 3返回以下字符串列表中的最小值：SELECT LEAST("Google", "Runoob", "Apple");  -- Apple')])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("MAX(expression)")])]),t._v(" "),s("td",[t._v("返回字段 expression 中的最大值")]),t._v(" "),s("td",[t._v("返回数据表 Products 中字段 Price 的最大值：SELECT MAX(Price) AS LargestPrice FROM Products;")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("MIN(expression)")])]),t._v(" "),s("td",[t._v("返回字段 expression 中的最小值")]),t._v(" "),s("td",[t._v("返回数据表 Products 中字段 Price 的最小值：SELECT MIN(Price) AS MinPrice FROM Products;")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("MOD(x,y)")])]),t._v(" "),s("td",[t._v("返回 x 除以 y 以后的余数")]),t._v(" "),s("td",[t._v("5 除于 2 的余数：SELECT MOD(5,2) -- 1")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("PI()")])]),t._v(" "),s("td",[t._v("返回圆周率(3.141593）")]),t._v(" "),s("td",[t._v("SELECT PI() --3.141593")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("POW(x,y)")])]),t._v(" "),s("td",[t._v("返回 x 的 y 次方")]),t._v(" "),s("td",[t._v("2 的 3 次方：SELECT POW(2,3) -- 8")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("RAND()")])]),t._v(" "),s("td",[t._v("返回 0 到 1 的随机数")]),t._v(" "),s("td",[t._v("SELECT RAND() --0.93099315644334")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("ROUND(x)")])]),t._v(" "),s("td",[t._v("返回离 x 最近的整数（遵循四舍五入）")]),t._v(" "),s("td",[t._v("SELECT ROUND(1.23456) --1")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("ROUND(x,y)")])]),t._v(" "),s("td",[t._v("返回指定位数的小数（遵循四舍五入）")]),t._v(" "),s("td",[t._v("SELECT ROUND(1.23456,3) –1.235")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("TRUNCATE(x,y)")])]),t._v(" "),s("td",[t._v("返回数值 x 保留到小数点后 y 位的值（与 ROUND 最大的区别是不会进行四舍五入）")]),t._v(" "),s("td",[t._v("SELECT TRUNCATE(1.23456,3) -- 1.234")])])])]),t._v(" "),s("h2",{attrs:{id:"八、操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、操作"}},[t._v("#")]),t._v(" 八、操作")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("MySQL有时在信息查询时需要进行对表自身进行关联查询，即一张表自己和自己关联，一张表当成多张表来用。注意自关联时表必须给表起别名。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("或者 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" 表"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_sanguo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t_sanguo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);