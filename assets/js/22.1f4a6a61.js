(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{401:function(t,s,n){"use strict";n.r(s);var a=n(29),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"新建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新建"}},[t._v("#")]),t._v(" 新建")]),t._v(" "),n("p",[t._v("创建一个新的 git 版本库。这个版本库的配置、存储等信息会被保存到.git 文件夹中")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化当前项目")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个目录，将其初始化为Git代码库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("project-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在指定目录创建一个空的 Git 仓库。运行这个命令会创建一个名为 directory，只包含 .git 子目录的空目录。")]),t._v("\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init --bare "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("directory"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载一个项目和它的整个代码历史")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个命令就是将一个版本库拷贝到另一个目录中，同时也将分支都拷贝到新的版本库中。这样就可以在新的版本库中提交到远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h2",{attrs:{id:"配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),n("p",[t._v("更改设置。可以是版本库的设置，也可以是系统的或全局的")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前的Git配置")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑Git配置文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config -e "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出、设置基本的全局变量")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyEmail@gmail.com"')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Name"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义当前用户所有提交使用的作者邮箱。")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias."),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("alias-name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("git-command"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为Git命令创建一个快捷方式（别名）。")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --system core.editor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("editor"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("h2",{attrs:{id:"帮助"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#帮助"}},[t._v("#")]),t._v(" 帮助")]),t._v(" "),n("p",[t._v("git 内置了对命令非常详细的解释，可以供我们快速查阅")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找可用命令")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找所有可用命令")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" -a\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在文档当中查找特定的命令")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git help <命令>")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" commit\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" init\n")])])]),n("h2",{attrs:{id:"状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#状态"}},[t._v("#")]),t._v(" 状态")]),t._v(" "),n("p",[t._v("显示索引文件（也就是当前工作空间）和当前的头指针指向的提交的不同")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示分支，未跟踪文件，更改和其他不同")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看其他的git status的用法")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" status\n")])])]),n("h2",{attrs:{id:"信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#信息"}},[t._v("#")]),t._v(" 信息")]),t._v(" "),n("p",[t._v("获取某些文件，某些分支，某次提交等 git 信息")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示commit历史，以及每次commit发生变更的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --stat\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 搜索提交历史，根据关键词")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -S "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个commit之后的所有变动，每个commit占据一行")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" HEAD --pretty"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:%s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" HEAD --grep feature\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个文件的版本历史，包括文件改名")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --follow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" whatchanged "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示指定文件相关的每一次diff")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示过去5次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -5 --pretty --oneline\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示本地commit  但是未推送到远程的commit信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branchname ^origin/branchname\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有提交过的用户，按提交次数排序")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" shortlog -sn\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示指定文件是什么人在什么时间修改过")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" blame "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示暂存区和工作区的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示暂存区和上一个commit的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示工作区与当前分支最新commit之间的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示两次提交之间的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("first-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("second-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示今天你写了多少行代码")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --shortstat "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@{0 day ago}"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区和版本库差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --staged\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区和版本库差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅仅比较统计信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --stat\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交的元数据和内容变化")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交发生变化的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show --name-only "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交时，某个文件的内容")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前分支的最近几次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -r\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建新的分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看各个分支最后提交信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已经被合并到当前分支的分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br --merged\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看尚未被合并到当前分支的分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br --no-merged\n")])])]),n("h2",{attrs:{id:"添加"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加"}},[t._v("#")]),t._v(" 添加")]),t._v(" "),n("p",[t._v("添加文件到当前工作空间中。如果你不使用 "),n("code",[t._v("git add")]),t._v(" 将文件添加进去，那么这些文件也不会添加到之后的提交之中")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加一个文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" test.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加一个子目录中的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" /path/to/file/test.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持正则表达式")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" ./*.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定文件到暂存区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定目录到暂存区，包括子目录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加当前目录的所有文件到暂存区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加每个变化前，都会要求确认")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于同一个文件的多处变化，可以实现分次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -p\n")])])]),n("h2",{attrs:{id:"删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),n("p",[t._v("rm 和上面的 add 命令相反，从工作空间中去掉某个文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除 HelloWorld.js")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" HelloWorld.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除子目录中的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" /pather/to/the/file/HelloWorld.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除工作区文件，并且将这次删除放入暂存区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止追踪指定文件，但该文件会保留在工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h2",{attrs:{id:"分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),n("p",[t._v("管理分支，可以通过下列命令对分支进行增删改查切换等")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有的分支和远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个新的分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git branch -m <旧名称> <新名称>")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new-branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑分支的介绍")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --edit-description\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有本地分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -r\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，但依然停留在当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，并切换到该分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，指向指定commit")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，与指定的远程分支建立追踪关系")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --track "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到指定分支，并更新工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到上一个分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立追踪关系，在现有分支与指定的远程分支之间")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并指定分支到当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择一个commit，合并进当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -dr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote/branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到某个分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建新的分支，并且切换过去")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co -b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于branch创建新的new_branch")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co -b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把某次历史提交记录checkout出来，创建成一个分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v(" -b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除某个分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制删除某个分支 (未被合并的分支被删除的时候需要强制)")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -D "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("h2",{attrs:{id:"检出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#检出"}},[t._v("#")]),t._v(" 检出")]),t._v(" "),n("p",[t._v("将当前工作空间更新到索引所标识的或者某一特定的工作空间")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检出一个版本库，默认将更新到master分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检出到一个特定的分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branchName\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 新建一个分支，并且切换过去，相当于"git branch <名字>; git checkout <名字>"')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b newBranch\n")])])]),n("h2",{attrs:{id:"远程同步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程同步"}},[t._v("#")]),t._v(" 远程同步")]),t._v(" "),n("p",[t._v("远程同步的远端分支")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载远程仓库的所有变动")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有远程仓库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个远程仓库的信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加一个新的远程仓库，并命名")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("shortname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程服务器地址和仓库名称")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程仓库地址")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@ github:xxx/xxx.git\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置远程仓库地址(用于修改远程仓库地址)")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin git@ github.com:xxx/xxx.git\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程仓库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repository"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上传本地指定分支到远程仓库")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把本地的分支更新到远端origin的master分支上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push <远端> <分支>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git push 相当于 git push origin master")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强行推送当前分支到远程仓库，即使有冲突")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --force\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送所有分支到远程仓库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --all\n")])])]),n("h2",{attrs:{id:"撤销"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复暂存区的指定文件到工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复某个commit的指定文件到暂存区和工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复暂存区的所有文件到工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置暂存区与工作区，与上一次commit保持一致")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前HEAD为指定commit，但保持暂存区和工作区不变")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --keep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个commit，用来撤销指定commit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后者的所有变化都将被前者抵消，并且应用到当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复最后一次提交的状态")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂时将未提交的变化移除，稍后再移入")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列所有stash")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复暂存的内容")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除暂存区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop\n")])])]),n("h2",{attrs:{id:"commit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" commit")]),t._v(" "),n("p",[t._v("将当前索引的更改保存为一个新的提交，这个提交包括用户做出的更改与信息")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交暂存区到仓库区附带提交信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交暂存区的指定文件到仓库区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交工作区自上次commit之后的变化，直接到仓库区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交时显示所有diff信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用一次新的commit，替代上一次提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果代码没有任何新变化，则用来改写上一次commit的提交信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重做上一次commit，并包括指定文件的新变化")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),n("h2",{attrs:{id:"diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[t._v("#")]),t._v(" diff")]),t._v(" "),n("p",[t._v("显示当前工作空间和提交的不同")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示工作目录和索引的不同")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示索引和最近一次提交的不同")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示工作目录和最近一次提交的不同")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD\n")])])]),n("h2",{attrs:{id:"grep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[t._v("#")]),t._v(" grep")]),t._v(" "),n("p",[t._v("可以在版本库中快速查找")]),t._v(" "),n("p",[t._v("可选配置：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 感谢Travis Jeffery提供的以下用法：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在搜索结果中显示行号")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global grep.lineNumber "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是搜索结果可读性更好")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.g "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"grep --break --heading --line-number"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在所有的java中查找variableName")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'variableName'")]),t._v(" -- "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.java'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 搜索包含 "arrayListName" 和, "add" 或 "remove" 的所有行')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arrayListName'")]),t._v(" --and "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" -e "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -e remove "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"log"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" log")]),t._v(" "),n("p",[t._v("显示这个版本库的所有提交")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某几条提交信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -n "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅显示合并提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --merges\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看该文件每次提交记录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看每次详细修改内容的diff")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看最近两次详细修改内容的diff")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p -2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看提交统计信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --stat\n")])])]),n("h2",{attrs:{id:"merge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[t._v("#")]),t._v(" merge")]),t._v(" "),n("p",[t._v("合并就是将外部的提交合并到自己的分支中")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将其他分支合并到当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge branchName\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在合并时创建一个新的合并后的提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不要 Fast-Foward 合并，这样可以生成 merge 提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge --no-ff branchName\n")])])]),n("h2",{attrs:{id:"mv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mv"}},[t._v("#")]),t._v(" mv")]),t._v(" "),n("p",[t._v("重命名或移动一个文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" test.js test2.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" test.js ./new/path/test.js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 改名文件，并且将这个改名放入暂存区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file-original"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file-renamed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制重命名或移动")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个文件已经存在，将要覆盖掉")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -f myFile existingFile\n")])])]),n("h2",{attrs:{id:"tag"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" tag")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个tag在当前commit")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个tag在指定commit")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :refs/tags/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看tag信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交指定tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交所有tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --tags\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，指向某个tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h2",{attrs:{id:"pull"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[t._v("#")]),t._v(" pull")]),t._v(" "),n("p",[t._v("从远端版本库合并到当前分支")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远端origin的master分支更新版本库")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git pull <远端> <分支>")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抓取远程仓库所有分支更新并合并到本地，不要快进合并")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --no-ff\n")])])]),n("h2",{attrs:{id:"ci"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ci"}},[t._v("#")]),t._v(" ci")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将git add, git rm和git ci等操作都合并在一起做")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci -a\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci -am "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some comments"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改最后一次提交记录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci --amend\n")])])]),n("h2",{attrs:{id:"rebase-谨慎使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rebase-谨慎使用"}},[t._v("#")]),t._v(" rebase (谨慎使用)")]),t._v(" "),n("p",[t._v("将一个分支上所有的提交历史都应用到另一个分支上"),n("em",[t._v("不要在一个已经公开的远端分支上使用 rebase")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将experimentBranch应用到master上面")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git rebase <basebranch> <topicbranch>")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master experimentBranch\n")])])]),n("h3",{attrs:{id:"例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),n("p",[t._v("合并最近的的commit，避免出现无用的commit信息")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i HEAD~2\n")])])]),n("p",[t._v("需要合并几条数据  只需要更改后面的数字，然后会自动进入vi编辑模式")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("pick e0b28b9 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\npick 670239a "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase 4195fd7..670239a onto 4195fd7 (2 commands)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commands:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# p, pick <commit> = use commit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r, reword <commit> = use commit, but edit the commit message")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e, edit <commit> = use commit, but stop for amending")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# s, squash <commit> = use commit, but meld into previous commit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# f, fixup <commit> = like "squash", but discard this commit\'s log message')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x, exec <command> = run command (the rest of the line) using shell")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# b, break = stop here (continue rebase later with 'git rebase --continue')")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# d, drop <commit> = remove commit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# l, label <label> = label current HEAD with a name")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# t, reset <label> = reset HEAD to a label")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       create a merge commit using the original merge commit's")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       message (or the oneline, if no original merge commit was")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       specified). Use -c <commit> to reword the commit message.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These lines can be re-ordered; they are executed from top to bottom.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you remove a line here THAT COMMIT WILL BE LOST.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# However, if you remove everything, the rebase will be aborted.")]),t._v("\n\n")])])]),n("p",[t._v("然后根据提示进行操作即可，按esc键退出输入模式，输入:(英文冒号)进入底线命令模式")]),t._v(" "),n("p",[t._v("输入"),n("code",[t._v("wq")]),t._v("会自动进入下一个vi编辑模式，修改commit提交信息保存即可")]),t._v(" "),n("h2",{attrs:{id:"reset-谨慎使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reset-谨慎使用"}},[t._v("#")]),t._v(" reset (谨慎使用)")]),t._v(" "),n("p",[t._v("将当前的头指针复位到一个特定的状态。这样可以使你撤销 merge、pull、commits、add 等 这是个很强大的命令，但是在使用时一定要清楚其所产生的后果")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使 staging 区域恢复到上次提交时的状态，不改变现在的工作目录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使 staging 区域恢复到上次提交时的状态，覆盖现在的工作目录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前分支恢复到某次提交，不改变现在的工作目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在工作目录中所有的改变仍然存在")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset dha78as\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前分支恢复到某次提交，覆盖现在的工作目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并且删除所有未提交的改变和指定提交之后的所有提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard dha78as\n")])])]),n("h2",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成一个可供发布的压缩包")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" archive\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打补丁")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" apply "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/sync.patch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试补丁能否成功")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" apply --check "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/sync.patch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看Git的版本")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" --version\n")])])]),n("h2",{attrs:{id:"常用的一些方法技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用的一些方法技巧"}},[t._v("#")]),t._v(" 常用的一些方法技巧")]),t._v(" "),n("h3",{attrs:{id:"回到某个-commit-的状态-并删除后面的-commit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-commit-的状态-并删除后面的-commit"}},[t._v("#")]),t._v(" 回到某个 commit 的状态，并删除后面的 commit")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认就是-mixed参数。")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --mixed HEAD^  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD~3  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  ")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容")]),t._v("\n\n")])])]),n("h2",{attrs:{id:"电脑配置用户名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#电脑配置用户名"}},[t._v("#")]),t._v(" 电脑配置用户名")]),t._v(" "),n("h3",{attrs:{id:"_1-配置用户名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置用户名"}},[t._v("#")]),t._v(" 1.配置用户名")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  --global user.name "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UserName'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  --global user.email "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Useremail'")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2-查看用户名与邮箱"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-查看用户名与邮箱"}},[t._v("#")]),t._v(" 2.查看用户名与邮箱")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  --global user.name   --- 用户名\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  --global user.email  --- 邮箱\n")])])]),n("h3",{attrs:{id:"_3-生成ssh-keys"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-生成ssh-keys"}},[t._v("#")]),t._v(" 3.生成ssh keys")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("ssh-keygen  -t rsa -C "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'useEmail'")]),t._v("\n")])])]),n("p",[t._v("上一个步骤成功的话，一般会在 "),n("code",[t._v("C:\\Users\\Administrator")]),t._v("目录下生成 "),n("code",[t._v(".ssh")]),t._v(" 文件夹，用记事本打开里面的 "),n("code",[t._v("id_rsa.pub")]),t._v(" 后，复制里面的内容")]),t._v(" "),n("p",[t._v("4.复制公钥")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/.ssh/id_rsa.pub\n")])])]),n("h3",{attrs:{id:"_4-配置git-ssh-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置git-ssh-key"}},[t._v("#")]),t._v(" 4.配置git ssh key")]),t._v(" "),n("p",[t._v("1、进入个人信息页面\n2、选中 SSH and GPG keys\n3、 New SSH keys")]),t._v(" "),n("h2",{attrs:{id:"忽略文件-gitignore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件-gitignore"}},[t._v("#")]),t._v(" 忽略文件 .gitignore")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此行为注释 会被Git忽略")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略 node_modules/ 目录下所有的文件")]),t._v("\nnode_modules\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略所有.vscode结尾的文件")]),t._v("\n.vscode\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略所有.md结尾的文件")]),t._v("\n*.md\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但README.md 除外")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("README.md\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会忽略 doc/something.txt 但不会忽略doc/images/arch.txt")]),t._v("\ndoc/*.txt\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略 doc/ 目录下所有扩展名为txt文件")]),t._v("\n\ndoc/**/*.txt\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);